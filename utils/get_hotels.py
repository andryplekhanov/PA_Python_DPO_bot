from typing import Dict, List, Union
from utils.api_reqiest import request_to_api
from config_data.config import RAPID_API_HEADERS, RAPID_API_ENDPOINTS
from loguru import logger
import re
import json


@logger.catch
def parse_hotels(data_dict: Dict) -> Union[Dict[str, List[Dict]], None]:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–µ–ª–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –≤ request_to_api –∏ –¥–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –ø–æ–ª—É—á–µ–Ω –∏ –¥–µ—Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ -
    –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è, –∏–Ω–∞—á–µ None.

    :param data_dict: —Å–ª–æ–≤–∞—Ä—å - –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –ø–æ api.
    :return: None –∏–ª–∏ —Å–ª–æ–≤–∞—Ä—å —Å –∫–ª—é—á–æ–º 'results' –∏ –∑–Ω–∞—á–µ–Ω–∏–µ–º - —Å–ø–∏—Å–∫–æ–º —Å–ª–æ–≤–∞—Ä–µ–π –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –æ—Ç–µ–ª–µ–π.
    """

    if data_dict.get('last_command') == 'highprice':
        sort_order = 'PRICE_HIGHEST_FIRST'
    elif data_dict.get('last_command') == 'bestdeal':
        sort_order = 'DISTANCE_FROM_LANDMARK'
    else:
        sort_order = 'PRICE'

    if data_dict.get('last_command') in ('highprice', 'lowprice'):
        querystring = {
            "destinationId": data_dict['city_id'], "pageNumber": "1", "pageSize": data_dict['amount_hotels'],
            "checkIn": data_dict['start_date'], "checkOut": data_dict['end_date'], "adults1": "1",
            "sortOrder": sort_order, "locale": "ru_RU", "currency": "USD"}
    else:
        querystring = {"destinationId": data_dict['city_id'], "pageNumber": "1", "pageSize": 25,
                       "checkIn": data_dict['start_date'], "checkOut": data_dict['end_date'], "adults1": "1",
                       "sortOrder": sort_order, "locale": "ru_RU", "currency": "USD",
                       'priceMin': data_dict['start_price'], 'priceMax': data_dict['end_price'],
                       'landmarkIds': '–¶–µ–Ω—Ç—Ä –≥–æ—Ä–æ–¥–∞'}

    responce = request_to_api(
        url=RAPID_API_ENDPOINTS['hotel-list'],
        querystring=querystring,
        headers=RAPID_API_HEADERS)
    if responce:
        pattern = r'(?<=,)"results":.+?(?=,"pagination)'
        find = re.search(pattern, responce.text)
        if find:
            result = json.loads(f"{{{find[0]}}}")
            return result
    return None


@logger.catch
def process_hotels_info(hotels_info_list: List[Dict], amount_nights: int) -> Dict[int, Dict]:
    """
    –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π - —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–µ–ª–µ–π, –≤—ã–±–∏—Ä–∞–µ—Ç –Ω—É–∂–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏ —Å–∫–ª–∞–¥—ã–≤–∞–µ—Ç
    –≤ —Å–ª–æ–≤–∞—Ä—å hotels_info_dict

    :param hotels_info_list: —Å–ø–∏—Å–æ–∫ —Å–æ —Å–ª–æ–≤–∞—Ä—è–º–∏. –ö–∞–∂–¥—ã–π —Å–ª–æ–≤–∞—Ä—å - –ø–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –æ—Ç–µ–ª—é (—Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞).
    :param amount_nights: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ—á–µ–π.
    :return: —Å–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–æ –æ—Ç–µ–ª—é: {hotel_id: {hotel_info}} (—Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º).
    """

    hotels_info_dict = dict()
    for hotel in hotels_info_list:
        hotel_id = hotel.get('id')
        if not hotel_id:
            continue
        hotel_url = f'https://www.hotels.com/ho{str(hotel_id)}/'
        hotel_name = hotel.get('name', 'No name')
        price_per_night = hotel.get('ratePlan', {}).get('price', {}).get('exactCurrent', 0)
        total_price = round(price_per_night * amount_nights, 2)

        distance_city_center = 0.0
        if hotel.get('landmarks'):
            for landmark in hotel.get('landmarks'):
                if landmark.get('label') in ('–¶–µ–Ω—Ç—Ä –≥–æ—Ä–æ–¥–∞', 'City center'):
                    distance = landmark.get('distance').split()[0]
                    if ',' in distance:
                        distance = distance.replace(',', '.')
                    distance_city_center = float(distance)
                    break

        hotel_neighbourhood = hotel.get('neighbourhood', 'No data')

        hotels_info_dict[hotel_id] = {
            'name': hotel_name,
            'price_per_night': price_per_night,
            'total_price': total_price,
            'distance_city_center': distance_city_center,
            'hotel_url': hotel_url,
            'hotel_neighbourhood': hotel_neighbourhood
        }
    return hotels_info_dict


@logger.catch
def get_hotel_info_str(hotel_data: Dict, amount_nights: int) -> str:
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ –æ—Ç–µ–ª—é –∏–∑ —Å–ª–æ–≤–∞—Ä—è –≤ —Å—Ç—Ä–æ–∫—É —Å html.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏–µ (bot.send_message).

    :param hotel_data: —Å–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–æ –æ—Ç–µ–ª—é.
    :param amount_nights: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ—á–µ–π.
    :return: —Å—Ç—Ä–æ–∫–∞ —Å html —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–æ –æ—Ç–µ–ª—é
    """

    result = f"<b>üè© –û—Ç–µ–ª—å:</b> {hotel_data['name']}\n" \
             f"<b>üìç –†–∞–π–æ–Ω:</b> {hotel_data['hotel_neighbourhood']}\n" \
             f"<b>üöï –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–Ω—Ç—Ä–∞:</b> {hotel_data['distance_city_center']} –ö–º\n" \
             f"<b>üí∞ –¶–µ–Ω–∞ –∑–∞ 1 –Ω–æ—á—å: </b> –æ—Ç {hotel_data['price_per_night']}$\n" \
             f"<b>üí∞üí∞ –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ {amount_nights} –Ω–æ—á.:</b> {hotel_data['total_price']}$\n" \
             f"<b>‚öìÔ∏è –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± –æ—Ç–µ–ª–µ <a href='{hotel_data['hotel_url']}'>–Ω–∞ —Å–∞–π—Ç–µ >></a></b>"
    return result


@logger.catch
def get_hotel_info_str_nohtml(hotel_data: Dict, amount_nights: int) -> str:
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ –æ—Ç–µ–ª—é –∏–∑ —Å–ª–æ–≤–∞—Ä—è –≤ —Å—Ç—Ä–æ–∫—É –±–µ–∑ html.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –º–µ–¥–∏–∞ –≥—Ä—É–ø–ø—É (bot.send_media_group).

    :param hotel_data: —Å–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–æ –æ—Ç–µ–ª—é.
    :param amount_nights: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ—á–µ–π.
    :return: —Å—Ç—Ä–æ–∫–∞ –±–µ–∑ html —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–æ –æ—Ç–µ–ª—é.
    """

    result = f"üè© {hotel_data['name']}\n" \
             f"üìç –†–∞–π–æ–Ω: {hotel_data['hotel_neighbourhood']}\n" \
             f"üöï –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–Ω—Ç—Ä–∞: {hotel_data['distance_city_center']} –ö–º\n" \
             f"üí∞ –¶–µ–Ω–∞ –∑–∞ 1 –Ω–æ—á—å: –æ—Ç {hotel_data['price_per_night']}$\n" \
             f"üí∞üí∞ –ü—Ä–∏–º–µ—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ {amount_nights} –Ω–æ—á.: {hotel_data['total_price']}$\n" \
             f"‚öìÔ∏è –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± –æ—Ç–µ–ª–µ: {hotel_data['hotel_url']}"
    return result
