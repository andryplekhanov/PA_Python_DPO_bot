from loader import bot
from typing import Dict
from telebot.types import Message
from utils.get_hotels import parse_hotels, process_hotels_info, get_hotel_info_str
from utils.get_photos import parse_photos, process_photos
from database.db_controller import save_history


def low_high_price_answer(message: Message, data: Dict, user: str) -> None:
    amount_nights = int((data['end_date'] - data['start_date']).total_seconds() / 86400)
    sort_order = '–¥–µ—à—ë–≤—ã—Ö' if data.get('last_command') == 'lowprice' else '–¥–æ—Ä–æ–≥–∏—Ö'
    reply_str = f"‚úÖ –û–∫, –∏—â–µ–º: <b>—Ç–æ–ø {data['amount_hotels']}</b> " \
                f"—Å–∞–º—ã—Ö {sort_order} –æ—Ç–µ–ª–µ–π –≤ –≥–æ—Ä–æ–¥–µ <b>{data['city']}</b>\n" \
                f"{f'–ù—É–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ' if data['need_photo'] else f'–§–æ—Ç–æ –Ω–µ –Ω—É–∂–Ω—ã'}" \
                f" ‚Äî <b>{data['amount_photo']}</b> —à—Ç—É–∫\n" \
                f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–µ–∑–¥–∫–∏: <b>{amount_nights} –Ω–æ—á.</b> " \
                f"(—Å {data['start_date']} –ø–æ {data['end_date']})."
    bot.send_message(message.chat.id, reply_str, parse_mode="html")

    hotels = parse_hotels(data)
    if hotels:
        result_dict = process_hotels_info(hotels.get('results'), amount_nights)
        if result_dict:
            show_info(message=message, request_data=data, result_data=result_dict, user=user,
                      amount_nights=amount_nights)
        else:
            bot.send_message(message.chat.id, '‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –æ—Ç–µ–ª—è–º –≥–æ—Ä–æ–¥–∞!')
    else:
        bot.send_message(message.chat.id, '‚ö†Ô∏è –û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑!')
    return


def print_photo(message: Message, hotel_id: int, amount_photo: int) -> None:
    all_photos = "https://www.hotels.com/ho{id}/?pwaThumbnailDialog=thumbnail-gallery".format(id=hotel_id)
    msg = "<b>üñº –§–æ—Ç–æ –æ—Ç–µ–ª—è:</b>\n" \
          "    –±–æ–ª—å—à–µ —Ñ–æ—Ç–æ <a href='{all_photos}'>–ø–æ —Å—Å—ã–ª–∫–µ >></a>".format(all_photos=all_photos)
    bot.send_message(message.chat.id, msg, parse_mode="html", disable_web_page_preview=True)

    photos_info_list = parse_photos(hotel_id)
    if photos_info_list:
        photos_list = process_photos(photos_info_list, amount_photo)
        if photos_list:
            for photo_url in photos_list:
                bot.send_photo(message.chat.id, photo_url)
        else:
            bot.send_message(message.chat.id, '‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ.')
    else:
        bot.send_message(message.chat.id, '‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ.')


def best_deal_answer(message: Message, data: Dict, user: str) -> None:
    amount_nights = int((data['end_date'] - data['start_date']).total_seconds() / 86400)
    reply_str = f"‚úÖ –û–∫, –∏—â–µ–º: <b>—Ç–æ–ø {data['amount_hotels']}</b> –æ—Ç–µ–ª–µ–π –≤ –≥–æ—Ä–æ–¥–µ <b>{data['city']}</b>\n" \
                f"–í —Ü–µ–Ω–æ–≤–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ <b>–æ—Ç {data['start_price']}$ –¥–æ {data['end_price']}$</b>\n" \
                f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —É–¥–∞–ª–µ–Ω–Ω–æ—Å—Ç—å –æ—Ç —Ü–µ–Ω—Ç—Ä–∞: <b>{data['end_distance']} –ö–º</b>\n" \
                f"{f'–ù—É–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ' if data['need_photo'] else f'–§–æ—Ç–æ –Ω–µ –Ω—É–∂–Ω—ã'}" \
                f" ‚Äî <b>{data['amount_photo']}</b> —à—Ç—É–∫\n" \
                f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–µ–∑–¥–∫–∏: <b>{amount_nights} –Ω–æ—á.</b> " \
                f"(—Å {data['start_date']} –ø–æ {data['end_date']})."
    bot.send_message(message.chat.id, reply_str, parse_mode="html")

    hotels = parse_hotels(data)
    if hotels:
        pre_result_dict = process_hotels_info(hotels.get('results'), amount_nights)

        if pre_result_dict:
            result_dict = dict()
            for hotel_id, hotel_data in pre_result_dict.items():
                if len(result_dict.keys()) >= data.get('amount_hotels'):
                    break
                current_distance = hotel_data.get('distance_city_center')
                if not current_distance:
                    continue
                if current_distance <= data.get('end_distance'):
                    result_dict[hotel_id] = hotel_data

            if result_dict:
                show_info(message=message, request_data=data, result_data=result_dict, user=user,
                          amount_nights=amount_nights)
            else:
                bot.send_message(message.chat.id, '‚ö†Ô∏è –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–æ—Å—å! –ò–∑–º–µ–Ω–∏—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞!')
        else:
            bot.send_message(message.chat.id, '‚ö†Ô∏è –ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–æ—Å—å! –ò–∑–º–µ–Ω–∏—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞!')
    else:
        bot.send_message(message.chat.id, '‚ö†Ô∏è –û—à–∏–±–∫–∞. –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–æ—Å—å!')


def show_info(message: Message, request_data: Dict, result_data: Dict, user: str, amount_nights: int) -> None:
    try:
        save_history(request_data=request_data, result_data=result_data, user=user)
    except Exception:
        bot.send_message(message.chat.id, '‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!')

    for hotel_id, hotel_data in result_data.items():
        hotel_info_str = get_hotel_info_str(hotel_data, amount_nights)
        bot.send_message(message.chat.id, hotel_info_str, parse_mode="html", disable_web_page_preview=True)
        if request_data['need_photo']:
            print_photo(message, hotel_id, request_data['amount_photo'])
